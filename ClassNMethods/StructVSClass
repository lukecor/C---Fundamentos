using System;

public struct SPonto // Struct means
{
	public int X;
	public int Y;
	
}
public class CPonto
{
	
	public int X;
	public int Y;

}

public class StructvsClasse
{	
	public static void Main()
	{
		SPonto ponto1 = new SPonto {X = 1, Y = 3};
		SPonto copiaPonto1 = ponto1; // When you use the Struct and instance it. You can made copies from variables, cause in struct doesn't do references, struct does values;
		ponto1.X = 3; // copy by value, not by reference;
		
		Console.WriteLine("Ponto 1 X: {0}", ponto1.X);
		Console.WriteLine(" Copia Ponto 1 X: {0}", copiaPonto1.X);		
		
		
		CPonto ponto2 = new CPonto {X = 2, Y = 4};
		CPonto copiaPonto2 = ponto2;
		ponto2.X = 4; // And the class is copied by the reference, not by value. This mean that the attribuctions will read the same local than class, not the "Copy";
		
		Console.WriteLine("CÃ³pia do Ponto2: {0}", copiaPonto2.X);
		
		
	}
}
