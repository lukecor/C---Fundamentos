using System;
using System.Collections.Generic;
using System.Linq;


public class Aluno {
	public string Nome;
	public int Idade;
	public double Nota;
	

}
public class LINQ2
{
	
	public static void Main()
	{
		var alunos = new List<Aluno>{
			new Aluno() {Nome = "Pedro", Idade = 24, Nota = 8.0},
			new Aluno() {Nome = "Andre", Idade = 21, Nota =  4.3},
			new Aluno() {Nome = "Ana", Idade = 25, Nota = 9.5},
			new Aluno() {Nome = "Jorge", Idade = 20, Nota = 8.5},
			new Aluno() {Nome = "Ana", Idade = 21, Nota = 7.7},
			new Aluno() {Nome = "Julia", Idade = 22, Nota = 7.5},
			new Aluno() {Nome = "MÃ¡rcio", Idade = 18, Nota = 6.1}
		
		};
		var pedro = alunos.Single(aluno => aluno.Nome.Equals("Pedro"));
		Console.WriteLine("{0} {1}", pedro.Nome, pedro.Nota);
		
		var fulano = alunos.SingleOrDeafault(aluno => aluno.Nome.Equals("Fulano"));
		if (fulano == null) {
				Console.WriteLine("Aluno Inexistente! ");
		
		}
		var ana = alunos.First(aluno => aluno.Nome.Equals("Ana"));
		Console.WriteLine(ana.Nota);
		
		var sicrano = alunos.FirstOrDefault(aluno => aluno.Nota.Equals("Sicrano"));
		if(sicrano == null) {
			Console.WriteLine("Aluno Inexistente!");	
		}
		var outrana = alunos.LastOrDefault(aluno => aluno.Nome.Equals("Ana"));
		Console.WriteLine(outrana.Nota);
		
		var exemploSkip = alunos.Skip(1).Take(3);
		foreach(var item in exemploSkip) {
			Console.WriteLine(item.Nome);
		}
		
		var maiornota = alunos.Max(aluno => aluno.Nota);
		Console.WriteLine(maiornota);
		
		var menornota = alunos.Min(aluno => aluno.Nota);
		Console.WriteLine(menornota);
		
		var somadasnotas = alunos.Sum(aluno => aluno.Nota);
		Console.WriteLine(somadasnotas);
		
		var MediaDaTurma = alunos.Average(aluno => aluno.Nota);
		Console.WriteLine(MediaDaTurma);
		
	}
}
